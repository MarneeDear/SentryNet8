@model Sentry.WebApp.ViewModels.ConstituentCompareViewModel
@using Sentry.WebApp.Extensions;

@{
    var winningId = "0";

    var selectedSystemRecord = Model.SystemRecords.Where(r => r.SystemId == Model.SystemId.ToString());
    if(selectedSystemRecord.Any())
    {
        winningId = selectedSystemRecord.FirstOrDefault().SystemRecordId;
    }
}

<!-- Modal - Compare Record -->
<div class="modal-header">
    <h3 class="modal-title" id="ConstituentMatchCompareModalLabel">Compare Records for: <span class="record-text h3">@Model.LastName, @Model.FirstName</span></h3>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close" data-toggle="tooltip" title="Close"><i aria-hidden="true" class="ua-brand-x"></i></button>
</div>
<div class="modal-body">
    <div class="panel-toolbar">
        <span class="integrationDate"><strong>Integration Date:</strong>&nbsp;@Html.DisplayFor(m => m.IntegrationDate)</span>
        <span class="sourceSystem"><strong>Source System:</strong>&nbsp;@Html.DisplayFor(m => m.System)</span>
    </div>
    <div class="row matching">
        <div class="col-sm-12 col-md-6">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">@Html.Raw(Model.System ?? " Source " + @Model.System) Record</h3>
                </div>
                <div class="panel-body">
                    <dl class="dl-horizontal">
                        <dt data-different="@(Model.FirstName_IsDifferent.ToString())">@Html.DisplayFor(m => m.FirstName_BusinessName):</dt>
                        <dd data-different="@(Model.FirstName_IsDifferent.ToString())">@Html.DisplayFor(m => m.FirstName)</dd>
                        <dt data-different="@(Model.PreferredName_IsDifferent.ToString())">@Html.DisplayFor(m => m.PreferredName_BusinessName):</dt>
                        <dd data-different="@(Model.PreferredName_IsDifferent.ToString())">@Html.DisplayFor(m => m.PreferredName)</dd>
                        <dt data-different="@(Model.MiddleName_IsDifferent.ToString())">@Html.DisplayFor(m => m.MiddleName_BusinessName):</dt>
                        <dd data-different="@(Model.MiddleName_IsDifferent.ToString())">@Html.DisplayFor(m => m.MiddleName)</dd>
                        <dt data-different="@(Model.LastName_IsDifferent.ToString())">@Html.DisplayFor(m => m.LastName_BusinessName):</dt>
                        <dd data-different="@(Model.LastName_IsDifferent.ToString())">@Html.DisplayFor(m => m.LastName)</dd>
                        <dt data-different="@(Model.MaidenName_IsDifferent.ToString())">@Html.DisplayFor(m => m.MaidenName_BusinessName):</dt>
                        <dd data-different="@(Model.MaidenName_IsDifferent.ToString())">@Html.DisplayFor(m => m.MaidenName)</dd>
                        <dt data-different="@(Model.UAPersonId_IsDifferent.ToString())">@Html.DisplayFor(m => m.UAPersonId_BusinessName):</dt>
                        <dd data-different="@(Model.UAPersonId_IsDifferent.ToString())">@Html.DisplayFor(m => m.UAPersonId)</dd>
                        <dt data-different="@(Model.Suffix_IsDifferent.ToString())">@Html.DisplayFor(m => m.Suffix_BusinessName):</dt>
                        <dd data-different="@(Model.Suffix_IsDifferent.ToString())">@Html.DisplayFor(m => m.Suffix)</dd>
                        <dt data-different="@(Model.BirthDate_IsDifferent.ToString())">@Html.DisplayFor(m => m.BirthDate_BusinessName):</dt>
                        <dd data-different="@(Model.BirthDate_IsDifferent.ToString())">@Html.DisplayFor(m => m.BirthDate)</dd>
                        <dt data-different="@(Model.DeceasedDate_IsDifferent.ToString())">@Html.DisplayFor(m => m.DeceasedDate_BusinessName):</dt>
                        <dd data-different="@(Model.DeceasedDate_IsDifferent.ToString())">@Html.DisplayFor(m => m.DeceasedDate)</dd>
                        <!--This is 12-->
                        <dt data-different="@(Model.MaritalStatus_IsDifferent.ToString())">@Html.DisplayFor(m => m.MaritalStatus_BusinessName):</dt>
                        <dd data-different="@(Model.MaritalStatus_IsDifferent.ToString())">@Html.DisplayFor(m => m.MaritalStatus)</dd>
                        <dt data-different="@(Model.Address_IsDifferent.ToString())">@Html.DisplayFor(m => m.Address_BusinessName):</dt>
                        <dd data-different="@(Model.Address_IsDifferent.ToString())">@Html.DisplayFor(m => m.Address)</dd>
                        <dt data-different="@(Model.City_IsDifferent.ToString())">@Html.DisplayFor(m => m.City_BusinessName):</dt>
                        <dd data-different="@(Model.City_IsDifferent.ToString())">@Html.DisplayFor(m => m.City)</dd>
                        <dt data-different="@(Model.State_IsDifferent.ToString())">@Html.DisplayFor(m => m.State_BusinessName):</dt>
                        <dd data-different="@(Model.State_IsDifferent.ToString())">@Html.DisplayFor(m => m.State)</dd>
                        <dt data-different="@(Model.PostalCode_IsDifferent.ToString())">@Html.DisplayFor(m => m.PostalCode_BusinessName):</dt>
                        <dd data-different="@(Model.PostalCode_IsDifferent.ToString())">@Html.DisplayFor(m => m.PostalCode)</dd>
                        <dt data-different="@(Model.Country_IsDifferent.ToString())">@Html.DisplayFor(m => m.Country_BusinessName):</dt>
                        <dd data-different="@(Model.Country_IsDifferent.ToString())">@Html.DisplayFor(m => m.Country)</dd>
                        <dt data-different="@(Model.AddressUseType_IsDifferent.ToString())">@Html.DisplayFor(m => m.AddressUseType_BusinessName):</dt>
                        <dd data-different="@(Model.AddressUseType_IsDifferent.ToString())">@Html.DisplayFor(m => m.AddressUseType)</dd>
                        <dt data-different="@(Model.AddressIsPrimary_IsDifferent.ToString())">@Html.DisplayFor(m => m.AddressIsPrimary_BusinessName):</dt>
                        <dd data-different="@(Model.AddressIsPrimary_IsDifferent.ToString())">@Html.DisplayFor(m => m.AddressIsPrimaryDisplay)</dd>
                        <dt data-different="@(Model.EmailAddress_IsDifferent.ToString())">@Html.DisplayFor(m => m.EmailAddress_BusinessName):</dt>
                        <dd data-different="@(Model.EmailAddress_IsDifferent.ToString())">@Html.DisplayFor(m => m.EmailAddress)</dd>
                        <dt data-different="@(Model.EmailAddressUseType_IsDifferent.ToString())">@Html.DisplayFor(m => m.EmailAddressUseType_BusinessName):</dt>
                        <dd data-different="@(Model.EmailAddressUseType_IsDifferent.ToString())">@Html.DisplayFor(m => m.EmailAddressUseType)</dd>
                        <dt data-different="@(Model.EmailIsPrimary_IsDifferent.ToString())">@Html.DisplayFor(m => m.EmailIsPrimary_BusinessName):</dt>
                        <dd data-different="@(Model.EmailIsPrimary_IsDifferent.ToString())">@Html.DisplayFor(m => m.EmailIsPrimaryDisplay)</dd>
                        <dt data-different="@(Model.PhoneNumber_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneNumber_BusinessName):</dt>
                        <dd data-different="@(Model.PhoneNumber_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneNumber)</dd>
                        <dt data-different="@(Model.PhoneExtension_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneExtension_BusinessName):</dt>
                        <dd data-different="@(Model.PhoneExtension_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneExtension)</dd>
                        <dt data-different="@(Model.PhoneCountryCode_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneCountryCode_BusinessName):</dt>
                        <dd data-different="@(Model.PhoneCountryCode_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneCountryCode)</dd>
                        <dt data-different="@(Model.PhoneUseType_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneUseType_BusinessName):</dt>
                        <dd data-different="@(Model.PhoneUseType_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneUseType)</dd>
                        <dt data-different="@(Model.PhoneIsPrimary_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneIsPrimary_BusinessName):</dt>
                        <dd data-different="@(Model.PhoneIsPrimary_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneIsPrimaryDisplay)</dd>
                    </dl>                    
                </div>
            </div><!-- /.panel-* -->
        </div><!-- /.col-* -->
        <div class="col-sm-12 col-md-6">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">MDS Record</h3>
                </div>
                <div class="panel-body">
                    <dl class="dl-horizontal">
                        <dt data-different="@(Model.FirstName_IsDifferent.ToString())">@Html.DisplayFor(m => m.FirstName_BusinessName):</dt>
                        <dd data-different="@(Model.FirstName_IsDifferent.ToString())">@Html.DisplayFor(m => m.FirstName_Compare)</dd>
                        <dt data-different="@(Model.PreferredName_IsDifferent.ToString())">@Html.DisplayFor(m => m.PreferredName_BusinessName):</dt>
                        <dd data-different="@(Model.PreferredName_IsDifferent.ToString())">@Html.DisplayFor(m => m.PreferredName_Compare)</dd>
                        <dt data-different="@(Model.MiddleName_IsDifferent.ToString())">@Html.DisplayFor(m => m.MiddleName_BusinessName):</dt>
                        <dd data-different="@(Model.MiddleName_IsDifferent.ToString())">@Html.DisplayFor(m => m.MiddleName_Compare)</dd>
                        <dt data-different="@(Model.LastName_IsDifferent.ToString())">@Html.DisplayFor(m => m.LastName_BusinessName):</dt>
                        <dd data-different="@(Model.LastName_IsDifferent.ToString())">@Html.DisplayFor(m => m.LastName_Compare)</dd>
                        <dt data-different="@(Model.MaidenName_IsDifferent.ToString())">@Html.DisplayFor(m => m.MaidenName_BusinessName):</dt>
                        <dd data-different="@(Model.MaidenName_IsDifferent.ToString())">@Html.DisplayFor(m => m.MaidenName_Compare)</dd>
                        <dt data-different="@(Model.UAPersonId_IsDifferent.ToString())">@Html.DisplayFor(m => m.UAPersonId_BusinessName):</dt>
                        <dd data-different="@(Model.UAPersonId_IsDifferent.ToString())">@Html.DisplayFor(m => m.UAPersonId_Compare)</dd>
                        <dt data-different="@(Model.Suffix_IsDifferent.ToString())">@Html.DisplayFor(m => m.Suffix_BusinessName):</dt>
                        <dd data-different="@(Model.Suffix_IsDifferent.ToString())">@Html.DisplayFor(m => m.Suffix_Compare)</dd>
                        <dt data-different="@(Model.BirthDate_IsDifferent.ToString())">@Html.DisplayFor(m => m.BirthDate_BusinessName):</dt>
                        <dd data-different="@(Model.BirthDate_IsDifferent.ToString())">@Html.DisplayFor(m => m.BirthDate_Compare)</dd>
                        <dt data-different="@(Model.DeceasedDate_IsDifferent.ToString())">@Html.DisplayFor(m => m.DeceasedDate_BusinessName):</dt>
                        <dd data-different="@(Model.DeceasedDate_IsDifferent.ToString())">@Html.DisplayFor(m => m.DeceasedDate_Compare)</dd>
                        <!--This is 12-->
                        <dt data-different="@(Model.MaritalStatus_IsDifferent.ToString())">@Html.DisplayFor(m => m.MaritalStatus_BusinessName):</dt>
                        <dd data-different="@(Model.MaritalStatus_IsDifferent.ToString())">@Html.DisplayFor(m => m.MaritalStatus_Compare)</dd>
                        <dt data-different="@(Model.Address_IsDifferent.ToString())">@Html.DisplayFor(m => m.Address_BusinessName):</dt>
                        <dd data-different="@(Model.Address_IsDifferent.ToString())">@Html.DisplayFor(m => m.Address_Compare)</dd>
                        <dt data-different="@(Model.City_IsDifferent.ToString())">@Html.DisplayFor(m => m.City_BusinessName):</dt>
                        <dd data-different="@(Model.City_IsDifferent.ToString())">@Html.DisplayFor(m => m.City_Compare)</dd>
                        <dt data-different="@(Model.State_IsDifferent.ToString())">@Html.DisplayFor(m => m.State_BusinessName):</dt>
                        <dd data-different="@(Model.State_IsDifferent.ToString())">@Html.DisplayFor(m => m.State_Compare)</dd>
                        <dt data-different="@(Model.PostalCode_IsDifferent.ToString())">@Html.DisplayFor(m => m.PostalCode_BusinessName):</dt>
                        <dd data-different="@(Model.PostalCode_IsDifferent.ToString())">@Html.DisplayFor(m => m.PostalCode_Compare)</dd>
                        <dt data-different="@(Model.Country_IsDifferent.ToString())">@Html.DisplayFor(m => m.Country_BusinessName):</dt>
                        <dd data-different="@(Model.Country_IsDifferent.ToString())">@Html.DisplayFor(m => m.Country_Compare)</dd>
                        <dt data-different="@(Model.AddressUseType_IsDifferent.ToString())">@Html.DisplayFor(m => m.AddressUseType_BusinessName):</dt>
                        <dd data-different="@(Model.AddressUseType_IsDifferent.ToString())">@Html.DisplayFor(m => m.AddressUseType_Compare)</dd>
                        <dt data-different="@(Model.AddressIsPrimary_IsDifferent.ToString())">@Html.DisplayFor(m => m.AddressIsPrimary_BusinessName):</dt>
                        <dd data-different="@(Model.AddressIsPrimary_IsDifferent.ToString())">@Html.DisplayFor(m => m.AddressIsPrimaryDisplay_Compare)</dd>
                        <dt data-different="@(Model.EmailAddress_IsDifferent.ToString())">@Html.DisplayFor(m => m.EmailAddress_BusinessName):</dt>
                        <dd data-different="@(Model.EmailAddress_IsDifferent.ToString())">@Html.DisplayFor(m => m.EmailAddress_Compare)</dd>
                        <dt data-different="@(Model.EmailAddressUseType_IsDifferent.ToString())">@Html.DisplayFor(m => m.EmailAddressUseType_BusinessName):</dt>
                        <dd data-different="@(Model.EmailAddressUseType_IsDifferent.ToString())">@Html.DisplayFor(m => m.EmailAddressUseType_Compare)</dd>
                        <dt data-different="@(Model.EmailIsPrimary_IsDifferent.ToString())">@Html.DisplayFor(m => m.EmailIsPrimary_BusinessName):</dt>
                        <dd data-different="@(Model.EmailIsPrimary_IsDifferent.ToString())">@Html.DisplayFor(m => m.EmailIsPrimaryDisplay_Compare)</dd>
                        <dt data-different="@(Model.PhoneNumber_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneNumber_BusinessName):</dt>
                        <dd data-different="@(Model.PhoneNumber_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneNumber_Compare)</dd>
                        <dt data-different="@(Model.PhoneExtension_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneExtension_BusinessName):</dt>
                        <dd data-different="@(Model.PhoneExtension_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneExtension_Compare)</dd>
                        <dt data-different="@(Model.PhoneCountryCode_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneCountryCode_BusinessName):</dt>
                        <dd data-different="@(Model.PhoneCountryCode_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneCountryCode_Compare)</dd>
                        <dt data-different="@(Model.PhoneUseType_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneUseType_BusinessName):</dt>
                        <dd data-different="@(Model.PhoneUseType_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneUseType_Compare)</dd>
                        <dt data-different="@(Model.PhoneIsPrimary_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneIsPrimary_BusinessName):</dt>
                        <dd data-different="@(Model.PhoneIsPrimary_IsDifferent.ToString())">@Html.DisplayFor(m => m.PhoneIsPrimaryDisplay_Compare)</dd>


                    </dl>
                   @if (Model.SystemRecords != null)
                    {
                        <hr />
                       
                            <div></div>
                            @foreach (var systemRecord in Model.SystemRecords)
                            {
                                <div>
                                <p>Source System: <strong>@systemRecord.SystemName</strong>&nbsp<a href="@Model.SourceRecordUrl(systemRecord.SystemName, systemRecord.SystemRecordId, Model.IntegrationName)" title="View in @systemRecord.SystemName" target="_blank">@systemRecord.SystemRecordId</a></p>
                                </div>
                            }
                        
                    }

                </div>
                <div class="panel-footer">
                    <button type="button" 
                            class="btn btn-link no-match text-left" 
                            data-dismiss="modal" 
                            data-toggle="tooltip" 
                            title="Not a Match">
                        <i role="img" class="fas fa-times">&nbsp;</i> Not a Match
                    </button>
                    <div class="pull-right">
                        <button type="submit"
                                class="btn btn-secondary"
                                title="Merge this Record"
                                formaction="@Url.Action("ConstituentManualMerge", "Constituent", new { Id = winningId, IntegrationId = Model.IntegrationId, SystemId = Model.SystemId, LosingSourceId = Model.SourceRecordId, LosingId = Model.Id })"
                                @(!Model.AllowMerge ? "disabled" : "")>
                            <i role="img" class="fas fa-code-branch">&nbsp;</i> Merge
                        </button>
                        <button type="submit"
                                class="btn btn-primary match"
                                title="Match this Record"
                                formaction="@Url.Action("ConstituentManualMatch", "Constituent", new { Id = Model.Id, IntegrationId = Model.IntegrationId, SystemId = Model.SystemId, MasterId = Model.MasterId })"
                                @(!Model.AllowMatch ? "disabled" : "")>
                            <i role="img" class="fas fa-check">&nbsp;</i> Match!
                        </button>
                    </div>

                </div>
            </div><!-- /.panel-* -->
        </div><!-- /.col-* -->
    </div>
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-link pull-left" data-dismiss="modal" data-toggle="tooltip" title="Cancel"><i role="img" class="fas fa-times">&nbsp;</i> Cancel</button>
    @*<button type="button" class="btn btn-primary pull-right" data-dismiss="modal" data-toggle="tooltip" title="Close"><i role="img" class="fas fa-times">&nbsp;</i> Close</button>*@
</div>

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {

            // Tooltip Titles
            //----------------------
            $(".ellipsis[title]").each(function (i, obj) {

                $(this).tooltip({
                    title: $(this).attr("tooltip-title")
                    , container: 'body'
                    , placement: 'top'
                    , trigger: 'hover'
                });

                $('body').on('hidden.bs.tooltip', function () {
                    var tooltips = $('.tooltip').not('.in');
                    if (tooltips) {
                        tooltips.remove();
                    }
                });

            });

        });
    </script>
}
