@model Sentry.WebApp.ViewModels.StudentAcademicInvolvementListViewModel

@{
    ViewData["Title"] = Model.Title;
}

<ul class="page-title">
    <li>
        <h1>
            @ViewData["Title"] Issues
        </h1>
    </li>
</ul>

<ol class="breadcrumb">
    <li><a asp-area="" asp-controller="Home" asp-action="Index">Sentry Home</a></li>
    <li><a asp-area="" asp-controller="Student" asp-action="Index">Student Dashboard</a></li>
    <li class="active">Record List</li>
</ol>

<div id="content-container" class="content-container" role="main">

    <div id="StudentAcademicInvolvementTableSection" class="d-none">
        <div class="table-responsive">
            <table id="academicInvolvementTable" class="table table-hover table-striped studentAcademicInvolvement recordList">
                <caption class="sr-only">List of Bad @Model.Title Records.</caption>
                <thead>
                    <tr class="tableHeader">
                        <th class="hide">Id</th>
                        <th class="hide">SystemId</th>
                        <th>Type:</th>
                        <th>Student Id:</th>
                        <th>Academic Involvement:</th>
                        <th>Academic Involvement Type:</th>
                        <th>Error Categories:</th>
                        <th>Data Source:</th>
                        <th>Integration Date:</th>
                        <th>Errors:</th>
                        <th class="none">None</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.RemediationList)
                    {
                        <tr data-record-status="@item.RecordStatus">
                            <td data-header="Id" class="hide">@Html.DisplayFor(modelItem => item.Id)</td>
                            <td data-header="SystemId" class="hide">@Html.DisplayFor(modelItem => item.SystemId)</td>
                            <td data-header="Type">
                                @if (item.RecordStatus == "Possible Match")
                                {
                                    <i role="img" class="fas fa-code-branch fa-rotate-270 text-info" title="Matching Issue"></i>
                                }
                                else if (item.RecordStatus == "Bad")
                                {
                                    <i role="img" class="fas fa-exclamation-triangle text-warning" title="Data Quality Issue"></i>
                                }
                            </td>
                            <td data-header="Student Id">@Html.DisplayFor(modelItem => item.StudentId)</td>
                            <td data-header="Academic Involvement">@Html.DisplayFor(modelItem => item.AcademicInvolvementName)</td>
                            <td data-header="Academic Involvement Type">@Html.DisplayFor(modelItem => item.AcademicInvolvementType)</td>
                            <td data-header="Error Categories">@Html.DisplayFor(modelItem => item.ErrorCategories)</td>
                            <td data-header="Data Source">@Html.DisplayFor(modelItem => item.SystemName)</td>
                            <td data-header="Integration Date">@Html.DisplayFor(modelItem => item.IntegrationDate)</td>
                            <td data-header="Errors">@Html.DisplayFor(modelItem => item.ErrorCount)</td>
                            <td data-header="None">&nbsp;</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div id="ZeroInboxStudentAcademicInvolvementSection" class="d-none">
        <h3><span title="for @Model.Title at least :)">You've achieved the ever-elusive 'Inbox ZERO'!</span></h3>
        <div class="inboxZero grid two-col-one-row">
            <aside class="child">
                <img class="pull-left" alt="Award Ribbon Image" title="Way to be Awesome!" src="~/img/award-ribbon.png" />
            </aside>
            <section class="child">
                <h4>Way to be <em title="You're Amazing!">awesome</em>, @Model.User! &mdash; Congratulations on a job well done!  <i role="img" class="fa fa-thumbs-up"></i></h4>
                <h5>All the @Model.Title issues have been remediated!</h5>
                <h5>Do any of your teammates need help?</h5>
                <p><small class="text-muted">Maybe take a quick walk to stretch your legs? You deserve a break. :)</small></p>
            </section>
        </div>
    </div>


</div>

@section scripts {
    <script>
        function LoadStudentAcademicInvolvementList() {

            // Data Table Variables
            // ------------------------------------------------------------
            var academicInvolvementTable = $('#academicInvolvementTable');
            var pageLength = 10;
            var paginationControlVisibility = "p";
            var lengthControlVisibility = "l";

            var academicInvolvementCount = $('#StudentAcademicInvolvementCount').find('span').text();

            console.log("# of Academic Involvement Records: " + academicInvolvementCount);

            if (academicInvolvementCount <= pageLength) {
                paginationControlVisibility = ""; // hides pagination
                lengthControlVisibility = ""; // hides page length dropdown
            };

            // Data Table Definition
            $(academicInvolvementTable).DataTable({
                paging: true,
                pageLength: pageLength,
                "lengthMenu": [10, 25, 50, 75, 100],
                // dom() more info: https://datatables.net/reference/option/dom ::
                // B = Buttons
                // l = page (l)ength changing input control
                // f = (f)iltering input
                // r = p(r)ocessing display element
                // t = (t)able
                // i = table (i)nfo summary - aka: showing x of x records
                // p = (p)agination control
                dom: 'B' + lengthControlVisibility + 'frti' + paginationControlVisibility,
                //serverSide: true, // if loading remote data
                processing: true,
                language: {
                    loadingRecords: '&nbsp;',
                    processing: 'Processing... <div class="spinner"></div>',
                    search: 'Filter',
                    emptyTable: "No records found."
                },
                // Ellipsis: https://datatables.net/plug-ins/dataRender/ellipsis more info: https://cdn.datatables.net/plug-ins/1.10.19/dataRender/ellipsis.js ::
                columnDefs: [{
                    targets: 3 // "Name" Column # (Zero-based)
                    , render: $.fn.dataTable.render.ellipsis(40, true)
                }],
                "order": [
                    [10, "asc"],
                    [3, "asc"]
                ],
                buttons: [
                    'excel', 'pdfHtml5', 'print'
                ],
                "columns": [
                    { "data": "Id", "id": "id", "autoWidth": true },
                    { "data": "systemId", "systemId": "System Id", "autoWidth": true },
                    { "data": "type", "type": "Type", "autoWidth": true },
                    { "data": "studentId", "studentId": "Student Id", "autoWidth": true },
                    { "data": "academicInvolvement", "academicInvolvement": "Academic Involvement", "autoWidth": true },
                    { "data": "academicInvolvementType", "academicInvolvementType": "Academic Involvement Type", "autoWidth": true },
                    { "data": "errorCategories", "errorCategories": "Error Categories", "autoWidth": true, "searchable": false },
                    { "data": "dataSource", "dataSource": "Data Source", "autoWidth": true, "searchable": false },
                    { "data": "integrationDate", "integrationDate": "Integration Date", "autoWidth": true, "searchable": false },
                    { "data": "errors", "name": "Errors", "autoWidth": true, "searchable": false },
                    { "data": "none", "name": "None", "autoWidth": true },
                ]
            });

            console.log(academicInvolvementTable);
            console.log("DataTable has been defined.");

            $('#academicInvolvementTable tbody').on('click', 'tr', function () {
                var table = $('#academicInvolvementTable').DataTable();
                var rowData = table.row(this).data();
                var urlEdit = '@Url.Action("StudentAcademicInvolvementEdit", "Student")/' + rowData.Id + '/' + rowData.systemId;
                var urlMatch = '@Url.Action("StudentAcademicInvolvementMatch", "Student")/' + rowData.Id + '/' + rowData.systemId;

                var recordStatus = $(this).data('record-status');

                if (recordStatus == "Bad" || recordStatus == "Changed") { // Bad or Changed
                    window.location.href = urlEdit;
                } else if (recordStatus == "Possible Match") { // Possible Match
                    window.location.href = urlMatch;
                } else {
                    alert("This Record Status (" + recordStatus + ") has not been accounted for in this listing.\nPlease email IT letting them know you've seen this error (preferrably attaching a screenshot of this screen).");
                };
            });

            // Tooltips [Regular]
            //----------------------------------------------------

            var elButton = $('button, i, [title]');
            $(elButton).each(function (i, obj) {
                $(this).tooltip({
                    title: $(this).attr("title")
                    , container: 'body'
                    , placement: 'top'
                    , trigger: 'hover'
                    , html: 'true'
                });

                $('body').on('hidden.bs.tooltip', function () {
                    var tooltips = $('.tooltip').not('.in');
                    if (tooltips) {
                        tooltips.remove();
                    }
                });
            });
            $(elButton).each(function (i, obj) {
                $(this).tooltip({
                    title: $(this).attr("tooltip-title")
                    , container: 'body'
                    , placement: 'top'
                    , trigger: 'hover'
                });

                $('body').on('hidden.bs.tooltip', function () {
                    var tooltips = $('.tooltip').not('.in');
                    if (tooltips) {
                        tooltips.remove();
                    }
                });
            });

            // Tooltip Titles
            //----------------------
            $(".ellipsis[title]").each(function (i, obj) {

                $(this).tooltip({
                    title: $(this).attr("tooltip-title")
                    , container: 'body'
                    , placement: 'top'
                    , trigger: 'hover'
                });

                $('body').on('hidden.bs.tooltip', function () {
                    var tooltips = $('.tooltip').not('.in');
                    if (tooltips) {
                        tooltips.remove();
                    }
                });

            });

        };
    </script>
}
